Debug Menu: Mechanics Submenu
The functions, strings, and data for the submenu "Mechanics".
[_glook]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<strMechanicsTitle> ALL
3c204d65 6368616e 69637320 3e000000

<strGameSub> ALL
47616d65 203e0000

<tblDbgMechanicsSubMenu> NTSC 1.02
# Entry 0: Menu Title
    00000000                                        # Disabled
    00000000                                        # n/a
    .long <<strMechanicsTitle>>                     # Label
    00000000 00000000 00000000 00000000 00000000    # n/a
# Entry 1: 20XX Neutral Spawn
    00000001                                        # String Table
    .long <<funDebugSubmenu>>                       # Function
    .long <<strGameSub>>                            # Label
    00000000 00000000
    .long <<tblDbgMechanicsGameSubMenu>>            # Submenu table
    00000000 00000000
# END OF LIST
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000


	-==-


Debug Menu: Mechanics > Game Submenu
The functions, strings, and data for the submenu "Mechanics > Game".
[_glook]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<strGameTitle> ALL
3c204761 6d65203e 00000000

<str20XXNeutralSpawnOpt> ALL
4e657574 72616c20 53706177 6e733a00

<strHandicapOpt> ALL                    # "Handicap: "
48616E64 69636170 3A200000

<strDamageRatio> ALL                    # "Damage Ratio"
44616D61 67652052 6174696F 00000000

<arrHandicapOpts> ALL
.long <<strDamageRatio>>
.long <<strStock>>

<tblDbgMechanicsGameSubMenu> NTSC 1.02
# Entry 0: Menu Title
    00000000                                        # Disabled
    00000000                                        # n/a
    .long <<strGameTitle>>                          # Label
    00000000 00000000 00000000 00000000 00000000    # n/a
# Entry 1: 20XX Neutral Spawn
    00000002                                        # String Table
    00000000
    .long <<str20XXNeutralSpawnOpt>>                # Label
    .long <<arrEnabledDisabled>>                    # Options
    .long <<varNeutralSpawnsEnabled>>               # Variable
    00000000                                        # n/a
    40000000                                        # 2 item table
    00000000                                        # n/a
# Entry 2: Stock Control/Crew Battle Mode
    00000002                                        # String Table
    00000000
    .long <<strHandicapOpt>>                        # Label
    .long <<arrHandicapOpts>>                       # Options
    .long <<varHandicapIsStocks>>                   # Variable
    00000000                                        # n/a
    40000000                                        # 2 item table
    00000000                                        # n/a
# END OF LIST
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000


	-==-


20XX Neutral Spawn for Singles and Doubles (Toggleable)
Overwrite <<varNeutralSpawnsEnabled>> to 1 to enable.
<https://smashboards.com/threads/forced-and-fixed-neutral-spawn-hack-singles-and-doubles.364075/>
[Achilles, Jorgasms]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<varNeutralSpawnsEnabled> NTSC 1.02
00000000

<funNeutralSpawnPart1> NTSC 1.02
39E00000 3A000000 3E408048 625307FD 91F206D8 91F206DC 8A3207C8 625206D7
2C110001 4182004C 39EF0001 8E930024 2C140003 4182000C 9A130004 3A100001
2C0F0004 41A0FFE4 48000130 39E00000 3A0000FF 3E408048 62520801 39EF0001
9E120024 2C0F0004 41A0FFF4 4800010C 3E208048 623106DC 39EF0001 3A520001
8E930024 89D30008 2C140003 41A2FFC0 2C0E0000 40820010 3A000000 8A910000
48000024 2C0E0001 40820010 3A000001 8E910001 48000010 3A000002 8E910002
48000004 3A940001 2C140003 40A0FF80 9A910000 9A120000 2C0F0004 41A0FF94
39E00000 3E208048 623106DB 3AA00000 39EF0001 8E910001 2C140001 40800008
48000010 3AB50001 2C150003 40A0FF40 2C0F0003 41A0FFDC 39E00000 3A310127
39C000FF 3A8000FF 39EF0001 8E110024 2C0E00FF 40820010 7E128378 39C00000
4800002C 7C109000 4082000C 39C00003 4800001C 2C1400FF 40820010 39C00001
3A800000 48000008 39C00002 99D1FFFC 2C0F0004 41A0FFB4 38840001
b 0x8026305C
NTSC 1.02 ---- 0x80263058 ----- 38840001 -> Branch
lis r9, <<varOptionsPreset>>@h
ori r9, r9, <<varOptionsPreset>>@l
81290000    # lwz r9, 0(r9)
2C090001    # cmpwi r9, 1
bgt <funNeutralSpawnPart1>
41800018    # blt RETURN
# If custom, check toggle
lis r9, <<varNeutralSpawnsEnabled>>@h
ori r9, r9, <<varNeutralSpawnsEnabled>>@l
81290000    # lwz r9, 0(r9)
2C090001    # cmpwi r9, 1
beq <funNeutralSpawnPart1>
# RETURN:
38840001    # addi r4, r4, 0x1  # Hook point code
00000000    # Branch back

<funNeutralSpawnPart2> NTSC 1.02
3DE0801B 61EFFFA8 7C0F6000 418200BC 3DC08048 A1CE0686 3DE08049 61EFED70
81EF0000 2C0E001F 4082001C 3E00C242 3E204242 3E404230 3A600000 960F0598
4800002C 2C0E001C 40820040 3E00C23A 62106666 3E20423D 62318E70 3E404214
3A600000 960F0854 48000004 924F0004 962F0040 924F0004 962F0040 926F0004
960F0040 926F0004 2C0E0020 40820014 3A000041 9E0F0650 3A0000C1 9A0F0040
2C0E0008 40820024 3E004270 3E20C270 3A400000 39EF4748 960F4748 924F0004
962F0040 924F0004 7D8803A6
b 0x801C0A4C
NTSC 1.02 ---- 0x801C0A48 ----- 7D8803A6 -> Branch
lis r15, <<varOptionsPreset>>@h
ori r15, r15, <<varOptionsPreset>>@l
81EF0000    # lwz r15, 0(r15)
2C0F0001    # cmpwi r15, 1
bgt <funNeutralSpawnPart2>
41800018    # blt RETURN
# If custom, check toggle
lis r15, <<varNeutralSpawnsEnabled>>@h
ori r15, r15, <<varNeutralSpawnsEnabled>>@l
81EF0000    # lwz r15, 0(r15)
2C0F0001    # cmpwi r15, 1
beq <funNeutralSpawnPart2>
# RETURN:
7D8803A6    # Hook point code
00000000    # Branch back


	-==-


Stock Control/Crew Battle Mode (SDR Options integrated)
Essentially, this hack gets rid of the damage modifier for handicap and replaces it with controllable stocks so that one player can spawn with say 6 stocks and another can spawn with 4.
When handicap is set to "ON" you can set custom stocks per player (1 stock - 9 stocks).
When handicap is set to "AUTO" you can set custom stock per player (1 stock - 9 stocks) just like when handicap is "ON." However, upon re-entering the character select screen, your handicap will be set to the amount of stocks you had at the end of the game. If you had zero stocks (as in you lost), the game will set your stock to the current stock setting (any stock amount higher than nine will be set nine). This allows for easy crew battles. You can still change the stocks manually if needed (rage quits etc.).
[Jorgasms]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
<varHandicapIsStocks> ALL
00000000

1.02 ----- 0x80036bb4 --- 9803008E -> Branch
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
41810020    # bgt RETURN
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
41820008    # beq RETURN
            # NORMAL:
9803008E    # Code at injection point
            # RETURN:
00000000    # Branch Back

<funHandicapIsStocksPart1> NTSC 1.02
3DC0803F 61CEA3E6
89CE0000 2C0E0000
4182008C 3DC08045
39CE310E 3DE08048
39EF0828 3E008045
6210BF14 8A100000
2C100009 40810008
3A000009 8A2E0000
2C110000 4182000C
9A2F0000 48000008
9A0F0000 8A2E0E90
2C110000 4182000C
9A2F0024 48000008
9A0F0024 8A2E1D20
2C110000 4182000C
9A2F0048 48000008
9A0F0048 8A2E2BB0
2C110000 4182000C
9A2F006C 48000008
9A0F006C 3803FFFF
b 0x8026667C
1.02 ----- 0x80266678 --- 3803FFFF -> Branch
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart1>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart1>
            # NORMAL:
3803FFFF    # Code at injection point
00000000    # Branch Back

<funHandicapIsStocksPart2> NTSC 1.02
3E008048 621006E0
3A200009 9A300000
9A300024 9A300048
9A30006C 38BEFFF8
b 0x801A57E0
1.02 ----- 0x801A57DC --- 38BEFFF8 -> Branch
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart2>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart2>
            # NORMAL:
38BEFFF8    # Code at injection point
00000000    # Branch Back

<funHandicapIsStocksPart3> NTSC 1.02
3DC0803F 61CEA3E6
3DE08045 61EFBF15
3A000001 89CE0000
2C0E00FF 4082000C
9A0F0000 38000001
b 0x80230D58
1.02 ----- 0x80230D54 --- 88030005 -> Branch
88030005    # Code at injection point
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart3>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart3>
            # NORMAL:
00000000    # Branch Back

<funHandicapIsStocksPart4> NTSC 1.02
3DC0803F
61CEA3E6 3E008045
6210BF15 8A300000
2C110001 40820014
38000002 39E000FF
99EE0000 4800000C
39E00000 99EE0000
b 0x8022F770
1.02 ----- 0x8022F76C --- 881C0004 -> Branch
881C0004    # Code at injection point
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart4>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart4>
            # NORMAL:
00000000    # Branch Back

<funHandicapIsStocksPart5> NTSC 1.02
3DC0803F
61CEA3E6 3E008045
6210BF15 8A300000
2C110001 40820014
38000002 39E000FF
99EE0000 4800000C
39E00000 99EE0000
b 0x8022F6C0
1.02 ----- 0x8022F6BC --- 881C0004 -> Branch
881C0004    # Code at injection point
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart5>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart5>
            # NORMAL:
00000000    # Branch Back

<funHandicapIsStocksPart6> NTSC 1.02
3DC08045 61CEBF15
89CE0000 2C0E0002
40820038 3DC08045
39CE310E 3DE08048
39EF0828 8A4F0000
9A4E0000 8A4F0024
9A4E0E90 8A4F0048
9A4E1D20 8A4F006C
9A4E2BB0 48000008
98A3008E
b 0x80033CC8
1.02 ----- 0x80033CC4 --- 98A3008E -> Branch
lis r11, <<varOptionsPreset>>@h
ori r11, r11, <<varOptionsPreset>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
bgt <funHandicapIsStocksPart6>
41800018    # blt NORMAL
lis r11, <<varHandicapIsStocks>>@h
ori r11, r11, <<varHandicapIsStocks>>@l
816B0000    # lwz r11, 0(r11)
2C0B0001    # cmpwi r11, 1
beq <funHandicapIsStocksPart6>
            # NORMAL:
98A3008E    # Code at injection point
00000000    # Branch Back