Custom Debug Submenu Engine
This allows for hackers to specify debug submenus, similar to submenus that exist.
See https://smashboards.com/threads/custom-debug-submenu-engine-for-devs-only.398050/
[Dan Salvato]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<funDebugSubmenu> NTSC 1.02
7C0802A6    # mflr r0
90010004    # stw r0, 4(r1)
2C040004    # cmpwi r4, 0x4
41820008    # beq SKIP_LOAD_REG4    # Under certain circumstances, r4 can be 0x4, so skip in this case
80840014    # lwz r4, 20(r4)
# SKIP_LOAD_REG4:
9421FFF8    # stwu r1, -8(r1)
3CA08030    # lis r5, 0x8030
60A51C80    # ori r5, r5, 0x1C80
3D80802F    # lis r12, 0x802F
618CFD94    # ori r12, r12, 0xFD94
7D8903A6    # mtctr r12
4E800421    # bctrl
38600000    # li r3, 0x0
8001000C    # lwz r0, 12(r1)
38210008    # addi r1, r1, 0x8
7C0803A6    # mtlr r0
4E800020    # blr


	-==-


SD Remix Options Menu Entries
This replaces the entries in the debug menu with SD Remix specific items.
0x3F74E0 is the actual overwrite of debug menu items
[_glook]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<strSdRemixOptions>  NTSC 1.02          # "< SD REMIX OPTIONS >"
3C 20 53 44 20 52 45 4D 49 58 20 4F 50 54 49 4F 4E 53 20 3E 00 00 00 00

<strGeneralOptionsSub>  NTSC 1.02       # "General Options >"
47 65 6E 65 72 61 6C 20 4F 70 74 69 6F 6E 73 20 3E 00 00 00

<strPresetLabel>  NTSC 1.02            # "Preset: "
50726573 65743a00

<strPresetsInfoSub> NTSC 1.02           # "Presets Info>"
50726573 65747320 696e666f 203e0000

<strMechanicsSub>  NTSC 1.02            # "Mechanics >"
4d656368 616e6963 73203e00

<strOtherTogglesSub>  NTSC 1.02         # "Other Toggles >"
4F 74 68 65 72 20 54 6F 67 67 6C 65 73 20 3E 00

<strCreditsSub>  NTSC 1.02              # "Credits >"
43 72 65 64 69 74 73 20 3E 00 00 00

<strDebugMenuSub>  NTSC 1.02            # "Debug Menu >"
44 65 62 75 67 20 4D 65 6E 75 20 3E 00 00 00 00

NTSC 1.02 ---- 0x3F74E0 -----
00000000 00000000 803EA6C8 00000000 00000000 00000000 00000000 00000000
00000001 803001DC 803FA454 00000000 00000000 00000000 00000000 00000000
00000001 80301420 803FA468 00000000 00000000 00000000 00000000 00000000
00000002 80300218 803FA474 804D5888 803FA258 00000000 40000000 00000000
00000002 80300248 803FA480 804D5880 803FA25C 00000000 40000000 00000000
00000002 00000000 803FA48C 803FA440 804D4A08 00000000 40A00000 00000000
00000003 00000000 803FA498 00000000 804D4AF8 00000000 3F800000 3F800000
00000003 00000000 803FA4A8 00000000 804D6B88 00000000 3F800000 3F800000
00000001 80300290 803FA4B8 00000000 00000000 00000000 00000000 00000000
00000001 803002FC 803FA4CC 00000000 00000000 00000000 00000000 00000000
00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000
 ->
# Entry 0: Title
    00000000                                        # Disabled Type
    00000000                                        # n/a
    .long <<strSdRemixOptions>>                     # Label: "< SD REMIX OPTIONS >"
    00000000 00000000 00000000 00000000 00000000    # n/a
# Entry 1: Submenu "General Options >"
    00000001                                        # Press-able
    .long <<funDebugSubmenu>>                       # Call submenu
    .long <<strGeneralOptionsSub>>                  # Label: "General Options >"
    00000000 00000000                               # n/a
    .long <<tblDbgGeneralOptsSubMenu>>              # General Options Submenu Data
    00000000 00000000                               # n/a
# Entry 2: String table, Presets
    00000002                                        # String Table
    .long <<funDbgChangeTogglesState>>              # When new string chosen, this extra code is run
    .long <<strPresetLabel>>                        # Label: "Presets: "
    .long <<arrPresets>>                            # String Table
    .long <<varOptionsPreset>>                      # Variable
    00000000                                        # n/a
    41000000                                        # Num Items in table: 8.f
    00000000                                        # n/a
# Entry 3: Submenu "Presets Info >"
    00000001                                        # Press-able
    .long <<funDebugSubmenu>>                       # Call submenu
    .long <<strPresetsInfoSub>>                     # Label: "Other Toggles >"
    00000000 00000000                               # n/a
    .long <<tblDbgPresetsInfoSubMenu>>             # Other Toggles Submenu Data
    00000000 00000000                               # n/a
# Entry OLD: Submenu "Mechanics >"
    00000001                                        # Press-able
    .long <<funDebugSubmenu>>                       # Call submenu
    .long <<strMechanicsSub>>                       # Label
    00000000 00000000                               # n/a
    .long <<tblDbgMechanicsSubMenu>>                # Melee+ Toggles Submenu Data
    00000000 00000000                               # n/a
# Entry OLD: Submenu "Other Toggles >"
    00000001                                        # Press-able
    .long <<funDebugSubmenu>>                       # Call submenu
    .long <<strOtherTogglesSub>>                    # Label: "Other Toggles >"
    00000000 00000000                               # n/a
    .long <<tblDbgOtherTogglesSubMenu>>             # Other Toggles Submenu Data
    00000000 00000000                               # n/a
# Entry 8: Menu "Credits >"
    00000001                                        # Press-able
    803002FC                                        # Function to go to "Mode Team Test" full menu
    .long <<strCreditsSub>>                         # Label: "Credits >"
    00000000 00000000 00000000 00000000 00000000    # n/a
# Entry 9: Menu "Debug Menu >"
    00000001                                        # Press-able
    803001DC                                        # Function to go to "Versus Mode" full menu
    .long <<strDebugMenuSub>>                       # Label: "Debug Menu >"
    00000000 00000000 00000000 00000000 00000000    # n/a
# END OF LIST (NOTE, there are actually 3 more entries in Melee's debug menu. Space for 3 more entries at least.
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000
# END OF LIST (absolute)
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000


	-==-


Fix Melee's Debug Menu entries (that we still use)
We still use some of Melee's debug menus (mostly for debug testing). Some of our menu changes clobber built in data that are still used by some of these things, so we need to re-implement them, and change the addresses.
They're typically strings and string tobles.
[_glook]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<strTop> ALL
54 4F 50 00                 # "TOP"

<strTime> ALL
54 69 6D 65 00 00 00 00     # "Time"

<strStock> ALL
53 74 6F 63 6B 00 00 00     # "Stock"

<strCoin> ALL
43 6F 69 6E 00 00 00 00     # "Coin"

<strEndless> ALL
45 6E 64 6C 65 73 73 00     # "Endless"

<arrRuleItems> NTSC 1.02    # [default melee rule items for first 5..., TOP string duplicated here]
804D58D0 804D58D8 804D58E0 804D58E4 804D58EC
.long <<strTop>>

<arrGameModes> NTSC 1.02    # Game Modes
.long <<strTime>>
.long <<strStock>>
.long <<strCoin>>
.long <<strEndless>>

NTSC 1.02 ---- 0x3F7914 ------      # Replace pointer to Game Mode string table (old one invalid)
803FA844
->
.long <<arrGameModes>>
-------------- 0x3F79D4 ------      # Point to new string table (old one is invalid)
803FA860
->
.long <<arrRuleItems>>


	-==-


SDR Options Menu General Strings
[_glook]
<strEnabled> NTSC 1.02                  # "Enabled"
456e6162 6c656400

<strDisabled> NTSC 1.02                 # "Disabled"
44 69 73 61 62 6C 65 64 00 00 00 00

<strNormal> NTSC 1.02                   # "Normal"
4E6F726D 616C0000

<arrEnabledDisabled> NTSC 1.02
.long <<strDisabled>>
.long <<strEnabled>>

<strTournament> ALL                     # "Tournament"
546F7572 6E616D65 6E740000

<strPlayer1Opt> ALL
506c6179 65722031 3a000000

<strPlayer2Opt> ALL
506c6179 65722032 3a000000

<strPlayer3Opt> ALL
506c6179 65722033 3a000000

<strPlayer4Opt> ALL
506c6179 65722034 3a000000


	-==-


SDR Options Presets Change And Data
Function that runs every time the presets option gets changed.
varOptionsPreset is which preset is currently selected, should be used as the string table variable.
funDbgChangeTogglesState updates the CSS banner and the interactive states of various toggles submenu items. It also goes through the submenus and toggles items on or off based on preset.
Also includes strings and arrays related to it
[_glook]
<varOptionsPreset> ALL
00000000

<strCustom> ALL
43757374 6f6d0000

<strSerious> ALL
53657269 6f757300

<strCasual> ALL
43617375 616c0000

<strMechanics> ALL
4d656368 616e6963 73000000

<strSDDoubleRemix> ALL
53442044 6f75626c 65205265 6d697800

<strSDDRAndBrawl> ALL
53444452 20772f20 42726177 6c000000

<arrPresets> NTSC 1.02
.long <<strDisabled>>
.long <<strCustom>>
.long <<strTournament>>
.long <<strSerious>>
.long <<strCasual>>
.long <<strMechanics>>
.long <<strSDDoubleRemix>>
.long <<strSDDRAndBrawl>>

<funDbgChangeTogglesState> NTSC 1.02
  mflr r0
  stw r0,0x4(sp)
  stwu sp,-0x8(sp)
  addi sp, sp, -0xC
  stw r29, 0(sp)    # If menus should be disabled or not.
  stw r30, 4(sp)
  stw r31, 8(sp)
  # The master toggle var is in r10
  lis r3, <<varOptionsPreset>>@h
  ori r3, r3, <<varOptionsPreset>>@l
  lwz r3, 0(r3)
  cmpwi r3, 1
  beq ENABLED

  DISABLE_ALL:
  li r29, 0     # Menus should be disabled
  b START_TOGGLE

  ENABLED:
  li r29, 1

  START_TOGGLE:
  lis r4, 0x803F
  ori r4, r4, 0xA4E0                          # 803FA4E0, The Main Debug Menu entry table start address
  addi r4, r4, 0x80                           # 0x80 is offset to first menu item that toggles
  li r3, 2                                    # Number of menu items to toggle
  TOOGLE_LOOP:
  stw r29, 0(r4)                              # Toggle On or Off, depending on r29
  addi r4, r4, 0x20                           # Size of menu entry
  subi r3, r3, 1
  cmpwi r3, 0
  bgt -0x10 # TOOGLE_LOOP   # Run until number of menu items is out    # This compiles incorrectly

  # End loop, call all sub options functions (if any)
  bl <funSetDacusData>

  # Return
  li r3,0
  lwz r29, 0(sp)
  lwz r30, 4(sp)
  lwz r31, 8(sp)
  lwz r0,0x18(sp)
  addi sp,sp,0x14
  mtlr r0
  blr