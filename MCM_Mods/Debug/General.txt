Debug Menu: General Options Submenu
The functions, strings, and data for the submenu "General Options".
[_glook]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -

<strGeneralOptionsTitle> ALL            # "< General Options >"
3C 20 47 65 6E 65 72 61 6C 20 4F 70 74 69 6F 6E 73 20 3E 00

<strStockPlatformColorOpt> ALL          # "Stock platform colors: "
53746F63 6B20706C 6174666F 726D2063 6F6C6F72 733A2000

<strNeutralSpawnOpt> ALL          # "Neutral Spawn: "
4e657574 72616c20 53706177 6e3a2000

<tblDbgGeneralOptsSubMenu> NTSC 1.02
# Entry 0: Menu Title
    00000000                                        # Disabled
    00000000                                        # n/a
    .long <<strGeneralOptionsTitle>>                # Label/Title
    00000000 00000000 00000000 00000000 00000000    # n/a
# Entry 1: Widescreen Option
    00000002                                        # String Table
    00000000                                        # Called when value changes
    .long <<strWidescreenOpt>>                      # Label
    .long <<arrWidescreenOptions>>                  # [Disabled, Enabled]
    .long <<varWidescreenOption>>                   # Variable
    00000000                                        # n/a
    40800000                                        # 4 item table
    00000000                                        # n/a
# Entry 2: Stock Platform Colors
    00000002                                        # String Table
    00000000                                        # Toggle function
    .long <<strStockPlatformColorOpt>>              # Label
    .long <<arrEnableDisabledMelee>>                # [Disabled, Enabled]
    .long <<varStockPlatformColorsEnabled>>         # Variable
    00000000                                        # n/a
    40000000                                        # 2 item table
    00000000                                        # n/a
# Entry 3: 20XX Neutral Spawn
    00000002                                        # String Table
    00000000                                        # Toggle function
    .long <<strNeutralSpawnOpt>>                    # Label
    .long <<arrEnableDisabledMelee>>                # [Disabled, Enabled]
    .long <<varNeutralSpawnsEnabled>>               # Variable
    00000000                                        # n/a
    40000000                                        # 2 item table
    00000000                                        # n/a
# END OF LIST
    00000009 00000000 00000000 00000000 00000000 00000000 00000000 00000000


	-==-


Widescreen debug related items
Strings with widescreen items
[_glook]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
<strWidescreenOpt> NTSC 1.02            # "Widescreen:"
57696465 73637265 656E3A00

<strDolphin> NTSC 1.02  "Dolphin"
446f6c70 68696e00

<strMonitor> NTSC 1.02  "Monitor"
4d6f6e69 746f7200

<strLCDTV> NTSC 1.02  "LCD TV"
4c434420 54560000

<arrWidescreenOptions> NTSC 1.02        # Disabled, Dolphin, Monitor, LCD TV
.long <<strDisabled>>
.long <<strDolphin>>
.long <<strMonitor>>
.long <<strLCDTV>>


	-==-


16:9 Widescreen Support (Variation B) [Toggleable]
Includes the fullscreen flashing effect fix.
This variation also fixes the position of magnifier bubbles, but also stretches the HUD.

If using with Dolphin, you'll also need to change the setting, "Force 16:9" for the aspect ratio and make sure "Widescreen Hack" is OFF.

16:9 for Dolphin: XXXX = 42B8, YYYY = 427C
16:9 for Monitor: XXXX = 4438, YYYY = 440E
16:9 for LCD TV: XXXX = 4080, YYYY = 4040
4:3 for Dolphin: XXXX = 41B8, YYYY = 41A8

See the notes in the link below for adjustments based on your display device:
https://docs.google.com/document/d/1o_KEmsbKg4_qIm607FfewzIvChQYxayN4r1j3Uy6yX0/edit

Extended to be toggleable. Update <<varWidescreenOption> to one of:
0 - Normal 4:3
1 - for Dolphin
2 - for Monitor
3 - For LCD TV

<https://smashboards.com/threads/16-9-widescreen-w-options-for-tv-monitor-dolphin.397929/>
[Dan Salvato, _glook]
Version -- DOL Offset ------ Hex to Replace ---------- ASM Code
<varWidescreenOption> ALL
00000000    # This is the index into tblWidescreenValues (1 indexed)

<ttblWidescreenValues> ALL
# Values to use in the codes. First half word is the "X" val, second half word is "Y" val
42B8427C    # 16:9 for Dolphin
4438440E    # 16:9 for Monitor
40804040    # 16:9 for LCD TV

1.02 ----- 0x80021ABC --- 38600006 -> Branch
lis r3, <<varWidescreenOption>>@h
ori r3, r3, <<varWidescreenOption>>@l
80630000    # lwz r3, 0(r3)
2C030000    # cmpwi r3, 0
41820008    # beq RETURN
            # WIDESCREEN_ENABLED:
39C00001    # li r14, 0x1
            # RETURN:
38600006    # li r3, 0x6        # Code at hook point
00000000    # Branch back

1.02 ----- 0x802F3980 --- 387F0000 -> Branch
lis r3, <<varWidescreenOption>>@h
ori r3, r3, <<varWidescreenOption>>@l
80630000    # lwz r3, 0(r3)
2C030000    # cmpwi r3, 0
41820008    # beq RETURN
            # WIDESCREEN_ENABLED:
39C00001    # li r14, 0x1
            # RETURN:
387F0000    # addi r3, r31, 0x0 # Code at hook point
00000000    # Branch back

1.02 ----- 0x8036A4A8 --- C03F0034 -> Branch
C03F0034    # lfs f1, 52(r31)   # Code at hook point
lis r3, <<varWidescreenOption>>@h
ori r3, r3, <<varWidescreenOption>>@l
80630000    # lwz r3, 0(r3)
2C030000    # cmpwi r3, 0
4182004C    # beq PROCEED_AS_NORMAL
2C0E0001    # cmpwi r14, 0x1
41820040    # beq- FINISH_WIDESCREEN
lis r14, <<ttblWidescreenValues>>@h
ori r14, r14, <<ttblWidescreenValues>>@l
3863FFFF    # subi r3, r3, 1      # Subtract to get index into table
5463103A    # slwi r3, r3, 2	    # Multiply by 4 to get byte offset
7DCE1A14    # add r14, r14, r3    # Get address of item
A00E0000    # lhz r0, 0(r14)      # Get the "X" value
5400801E    # slwi r0, r0, 16     # Shift into top 16 bits
90010030    # stw r0, 48(r1)
A00E0002    # lhz r0, 2(r14)      # Get the "X" value
5400801E    # slwi r0, r0, 16     # Shift into top 16 bits
90010034    # stw r0, 52(r1)
C0010030    # lfs f0, 48(r1)
EC210032    # fmuls f1, f1, f0
C0010034    # lfs f0, 52(r1)
EC210024    # fdivs f1, f1, f0
            # FINISH_WIDESCREEN:
39C00000    # li r14, 0x0
            # PROCEED_AS_NORMAL:
281E0000    # cmplwi r30, 0     # Reset the comparison
00000000    # Branch back


	-==-


Stock Dependent Revival Platform Colors (Toggleable)
The coloring of the revival platform changes based on how many stocks a player has remaining.
4 stocks left (via a minigame or something...) = purple
3 stocks left = green platform
2 stocks left = orange platform
1 stock left = red platform (as in, danger....you're about to lose)

Set <<varStockPlatformColorsEnabled>> to 1 to turn this on.
<https://smashboards.com/threads/stock-dependent-revival-platform-colors.403864>
[achilles]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<varStockPlatformColorsEnabled> NTSC 1.02
00000000

NTSC 1.02 ---- 0x800D5008 ----- 7C7E1B78 -> Branch
7C7E1B78    # mr r30, r3
lis r3, <<varStockPlatformColorsEnabled>>@h
ori r3, r3, <<varStockPlatformColorsEnabled>>@l
80630000    # lwz r3, 0(r3)
2C030000    # cmpwi r3, 0
418200E8    # beq END
# Main bulk of the code
3FE08016 63FFB094 7FE803A6 4E800021 2C030001 408200D0 3C60801A 60634340
7C6803A6 3C608047 60639D30 88630000 4E800021 2C030001 418200AC 7FC3F378
3E608045 626FBF12 8A0F0002 2C100004 40820094 3E00804D 821064FC 626F310E
8BE3006C 1DDF0E90 7DEE78AE 2C0F0001 41820050 2C0F0003 41820020 2C0F0002
4182002C 3E20BAB0 6231FFFF 3E408000 625280FF 4800003C 3E2000FF 623100FF
3E400059 625200FF 48000028 3E20FF99 623100FF 3E409F5F 625200FF 48000014
3E20FF00 623100FF 3E409000 625200FF 92300AC4 92500AF0 92300B90 92300CE0
92300D18
            # END:
7FC3F378    # mr r3,r30     # Set r3 back
00000000    # Branch back


	-==-


20XX Neutral Spawn for Singles and Doubles (Toggleable)

<https://smashboards.com/threads/forced-and-fixed-neutral-spawn-hack-singles-and-doubles.364075/>
[Achilles, Jorgasms]
Revision ---- DOL Offset ---- Hex to Replace ---------- ASM Code -
<varNeutralSpawnsEnabled> NTSC 1.02
00000000

NTSC 1.02 ---- 0x80263058 ----- 38840001 -> Branch
lis r9, <<varNeutralSpawnsEnabled>>@h
ori r9, r9, <<varNeutralSpawnsEnabled>>@l
81290000    # lwz r9, 0(r9)
2C090000    # cmpwi r9, 0
4182017C    # beq RETURN
39E00000 3A000000 3E408048 625307FD 91F206D8 91F206DC 8A3207C8 625206D7
2C110001 4182004C 39EF0001 8E930024 2C140003 4182000C 9A130004 3A100001
2C0F0004 41A0FFE4 48000130 39E00000 3A0000FF 3E408048 62520801 39EF0001
9E120024 2C0F0004 41A0FFF4 4800010C 3E208048 623106DC 39EF0001 3A520001
8E930024 89D30008 2C140003 41A2FFC0 2C0E0000 40820010 3A000000 8A910000
48000024 2C0E0001 40820010 3A000001 8E910001 48000010 3A000002 8E910002
48000004 3A940001 2C140003 40A0FF80 9A910000 9A120000 2C0F0004 41A0FF94
39E00000 3E208048 623106DB 3AA00000 39EF0001 8E910001 2C140001 40800008
48000010 3AB50001 2C150003 40A0FF40 2C0F0003 41A0FFDC 39E00000 3A310127
39C000FF 3A8000FF 39EF0001 8E110024 2C0E00FF 40820010 7E128378 39C00000
4800002C 7C109000 4082000C 39C00003 4800001C 2C1400FF 40820010 39C00001
3A800000 48000008 39C00002 99D1FFFC 2C0F0004 41A0FFB4
# RETURN:
38840001    # addi r4, r4, 0x1  # Hook point code
00000000    # Branch back

NTSC 1.02 ---- 0x801C0A48 ----- 7D8803A6 -> Branch
lis r15, <<varNeutralSpawnsEnabled>>@h
ori r15, r15, <<varNeutralSpawnsEnabled>>@l
81EF0000    # lwz r15, 0(r15)
2C0F0000    # cmpwi r15, 0
418200CC    # beq RETURN
3DE0801B 61EFFFA8 7C0F6000 418200BC 3DC08048 A1CE0686 3DE08049 61EFED70
81EF0000 2C0E001F 4082001C 3E00C242 3E204242 3E404230 3A600000 960F0598
4800002C 2C0E001C 40820040 3E00C23A 62106666 3E20423D 62318E70 3E404214
3A600000 960F0854 48000004 924F0004 962F0040 924F0004 962F0040 926F0004
960F0040 926F0004 2C0E0020 40820014 3A000041 9E0F0650 3A0000C1 9A0F0040
2C0E0008 40820024 3E004270 3E20C270 3A400000 39EF4748 960F4748 924F0004
962F0040 924F0004
# RETURN:
7D8803A6    # Hook point code
00000000    # Branch back