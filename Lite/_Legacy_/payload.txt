What the payload should do
--------------------------
Go through the Direct Overwrites Table (Change the storage address of name tags to 0x8046A900 in there)
Right after that table is the array overwrites
Play "Success" announcer sound
Branch to 0x80239E9C

Overwrites table starts at 8045DA00

Memory Card Code: Can use r3 to r12
-----------------------------------

########## v1.00 #############
# Direct overwrites
lis r3, 0x8045
ori r3, r3, 0xBB00	# Overwrites table
DIRECT_LOOP:
lwz r4, 0(r3)
lwz r5, 4(r3)
addi r3, r3, 8
cmpwi r4, 0
beq ARRAY_LOOP
stw r5, 0(r4)
b DIRECT_LOOP

# Array overwrites TODO
ARRAY_LOOP:
lwz r4, 0(r3)
lwz r5, 4(r3)
addi r3, r3, 8
cmpwi r4, 0
beq SUCCESS
WRITE_ARRAY:
lwz r6, 0(r3)
stw r6, 0(r4)
addi r4, r4, 4
addi r3, r3, 4
subi r5, r5, 1
cmpwi r5, 0
bne WRITE_ARRAY
b ARRAY_LOOP

# Play "Success" sound, 84 in sound test
SUCCESS:
lis r3, 0x0007
ori r3, r3, 0xc85e
li r4, 0x00fe
li r5, 0x0080
li r6, 0x0000
li r7, 0x0007
lis r12, 0x8038
ori r12, r12, 0xb130 # Function 8038b130
mtctr r12
bctrl

RETURN:

# Set game mode to stock
li r3, 1
lis r4, 0x8046
stb r3, -0x60B6(r4)

80459F4A

# Set stock count to 4
li r3, 4
lis r4, 0x8046
stb r3, -0x60B4(r4)

# set Stock Time Limit to 8, FF on, Pause on, Score display on
lis r3, 0x0801
ori r3, r3, 0x0101
lis r4, 0x8046
stw r3, -0x60B0(r4)

# Branch back
lis r4, 0x8023
ori r4, r4, 0x8b90
mtctr r4
bctr	# Branch to 80238b90










v1.00
Mode	01 to 80459F4A
Stocks	04 to 80459F4C
Rest	08010101 to 80459F50

v1.01
Mode	01 to 
Stocks	04 to 
Rest	08010101 to 

v1.02
Mode	01 to 8045BF12
Stocks	04 to 8045BF14
Rest	08010101 to 8045BF18



80459f48 8045B230 8045BF10 00250104	# Set music, game mode, time amount
80459f4C 8045B234 8045BF14 04000a00 # Stocks, handicap, damage ratio, random stage
80459F50 8045B238 8045BF18 08010101	# set Stock Time Limit to 8, FF on, Pause on, Score display on

########### v1.02 ############

# Direct overwrites
lis r3, 0x8045
ori r3, r3, 0xDA00	# Overwrites table
DIRECT_LOOP:
lwz r4, 0(r3)
lwz r5, 4(r3)
addi r3, r3, 8
cmpwi r4, 0
beq ARRAY_LOOP
stw r5, 0(r4)
b DIRECT_LOOP

# Array overwrites TODO
ARRAY_LOOP:
lwz r4, 0(r3)
lwz r5, 4(r3)
addi r3, r3, 8
cmpwi r4, 0
beq SUCCESS
WRITE_ARRAY:
lwz r6, 0(r3)
stw r6, 0(r4)
addi r4, r4, 4
addi r3, r3, 4
subi r5, r5, 1
cmpwi r5, 0
bne WRITE_ARRAY
b ARRAY_LOOP

# Play "Success" sound, 84 in sound test
SUCCESS:
lis r3, 0x0007
ori r3, r3, 0xc85e
li r4, 0x00fe
li r5, 0x0080
li r6, 0x0000
li r7, 0x0007
lis r12, 0x8038
ori r12, r12, 0xcff4  # Function 8038cff4
mtctr r12
bctrl

RETURN:

# Set game mode to stock
li r3, 1
lis r4, 0x8046
stb r3, -0x40EE(r4)

# Set stock count to 4
li r3, 4
lis r4, 0x8046
stb r3, -0x40EC(r4)

# set Stock Time Limit to 8, FF on, Pause on, Score display on
lis r3, 0x0801
ori r3, r3, 0x0101
lis r4, 0x8046
stw r3, -0x40E8(r4)

# Branch back
lis r4, 0x8023
ori r4, r4, 0x9E9C
mtctr r4
bctr	# Branch to 80239E9C